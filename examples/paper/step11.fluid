data V : Type where
  | MkV : (n1 : Nat) -> V

data Elem : (n17 : V) -> (n18 : List V) -> Type where
  | Here : (x : V) -> (xs : List V) -> Elem x (x::xs)
  | There : (x : V) -> (xs : List V) -> (n25 : Elem x xs) -> (y : V) -> Elem x (y::xs)

data Unzip : (n14 : List ((n15 : V) ** Nat)) -> (n16 : List V) -> (n17 : List Nat) -> Type where
  | NilUZ : Unzip [] [] []
  | ConsUZ : (x : V) -> (y : Nat) -> (xs : List ((n22 : V) ** Nat)) -> (vs : List V) -> (ws : List Nat) -> (n25 : Unzip xs vs ws) -> Unzip ((x, y)::xs) (x::vs) (y::ws)

data Bool : Type where
  | True : Bool
  | False : Bool

isEqual : (n27 : Nat) -> (n28 : Nat) -> Bool
isEqual Z Z = True
isEqual (S n) (S m) = isEqual n m
isEqual v38 v39 = False

plus : (n37 : Nat) -> (n38 : Nat) -> Nat
plus a Z = a
plus a (S n) = S (plus a n)

data Expr : (newInd0 : List V) -> Type where
  | Num : (n41 : Nat) -> (numparam_1 : List V) -> Expr numparam_1
  | Var : (n43 : V) -> (varparam_1 : List V) -> (relParamV : Elem n43 varparam_1) -> Expr varparam_1
  | Add : (addparam_0 : List V) -> (n44 : Expr addparam_0) -> (n45 : Expr addparam_0) -> Expr addparam_0

lookupVar : (patV2 : List Nat) -> (newParamV : List V) -> (x : V) -> (relParamV_func : Elem x newParamV) -> (env : List ((n48 : V) ** Nat)) -> (relParamV_funcUnzip : Unzip env newParamV patV2) -> Nat
lookupVar patV2 (p::ps) (MkV x) (Here v72 v73) ((MkV y, val)::ys) (ConsUZ x12 x13 x14 x15 x16 x17) = val
lookupVar (q0::q1) (p::ps) (MkV x) (There v100 v101 v102 v103) ((MkV y, val)::ys) (ConsUZ x18 x19 x20 x21 x22 x23) = lookupVar q1 ps (MkV x) v102 ys x23

eval : (patV1 : List Nat) -> (env : List ((n57 : V) ** Nat)) -> (evalparam_1 : List V) -> (relParamV_funcUnzip : Unzip env evalparam_1 patV1) -> (n58 : Expr evalparam_1) -> Nat
eval [] [] [] NilUZ (Num n []) = n
eval (x2::x3) ((x0, x1)::x5) (x6::x7) (ConsUZ x24 x25 x26 x27 x28 x29) (Var x (x6::x7) (Here p0 p1)) = lookupVar (x2::x3) (x6::x7) x (Here p0 p1) ((x0, x1)::x5) (ConsUZ x24 x25 x26 x27 x28 x29)
eval (x2::x3) ((x0, x1)::x5) (x6::x7) (ConsUZ x24 x25 x26 x27 x28 x29) (Var x (x6::x7) (There p2 p3 p4 p5)) = lookupVar (x2::x3) (x6::x7) x (There p2 p3 p4 p5) ((x0, x1)::x5) (ConsUZ x24 x25 x26 x27 x28 x29)
eval (x4::x5) (x8::x9) (x14::x15) (ConsUZ x72 x73 x74 x75 x76 x77) (Add (x14::x15) e1 e2) = case eval (x4::x5) (x8::x9) (x14::x15) (ConsUZ x72 x73 x74 x75 x76 x77) e1 of
  | e1' => case eval (x4::x5) (x8::x9) (x14::x15) (ConsUZ x72 x73 x74 x75 x76 x77) e2 of
    | e2' => plus e1' e2'
eval [] [] [] NilUZ (Add [] e1 e2) = case eval [] [] [] NilUZ e1 of
  | e1' => case eval [] [] [] NilUZ e2 of
    | e2' => plus e1' e2'
